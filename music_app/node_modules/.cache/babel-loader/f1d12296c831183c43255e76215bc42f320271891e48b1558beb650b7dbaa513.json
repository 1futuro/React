{"ast":null,"code":"var _jsxFileName = \"/Users/mirae/Desktop/personal-workspace/music_app/src/components/Pagination copy.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Pagination.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = _ref => {\n  _s();\n  let {\n    postsPerPage,\n    totalPosts,\n    paginate,\n    prevPage,\n    nextPage\n  } = _ref;\n  // const pageNumbers = []; \n  const pageGroup = Math.ceil(currentPage / postsPerPage);\n  const [last, setLast] = useState(pageGroup * postsPerPage); // 화면에 보여질 마지막 페이지 번호\n  const [first, setFirst] = useState(last - (postsPerPage - 1));\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalPage = Math.ceil(totalPosts / postsPerPage); // 원조 for문\n  console.log('total', totalPage);\n\n  // for (let i = 1; i <= totalPage; i++) {\n  //     pageNumbers.push(i); // 배열에 값 추가하여 원본 변경\n  // }\n\n  const getPaginationGroup = () => {\n    return new Array(postsPerPage).fill().map((_, idx) => first + idx);\n  };\n  const handlePrevPageGroup = () => {\n    setFirst(first - 5);\n  };\n  console.log('currentPage', currentPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: handlePrevPageGroup,\n          children: '<<'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: prevPage,\n          className: currentPage === 1 ? \"disabled\" : \"abled\",\n          children: [\" \", '<', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), getPaginationGroup().map((number, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => paginate(number),\n          className: currentPage === number ? \"page-item-active\" : \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: nextPage,\n          className: currentPage === totalPage ? \"disabled\" : \"abled\",\n          children: [\" \", '>', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: '>>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Pagination, \"AdGt1EDIJKZL02r8overTp7NAWo=\");\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useState","Pagination","postsPerPage","totalPosts","paginate","prevPage","nextPage","pageGroup","Math","ceil","currentPage","last","setLast","first","setFirst","setCurrentPage","totalPage","console","log","getPaginationGroup","Array","fill","map","_","idx","handlePrevPageGroup","number","index"],"sources":["/Users/mirae/Desktop/personal-workspace/music_app/src/components/Pagination copy.js"],"sourcesContent":["import React,{ useState } from \"react\";\nimport './Pagination.css'\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate, prevPage, nextPage }) => {\n    // const pageNumbers = []; \n    const pageGroup = Math.ceil(currentPage/postsPerPage);\n    const [last,setLast] = useState(pageGroup * postsPerPage); // 화면에 보여질 마지막 페이지 번호\n    const [first,setFirst] = useState(last - (postsPerPage - 1));\n    const [currentPage, setCurrentPage] = useState(1);\n    \n    const totalPage = Math.ceil(totalPosts / postsPerPage); // 원조 for문\n    console.log('total',totalPage)\n\n    \n    // for (let i = 1; i <= totalPage; i++) {\n    //     pageNumbers.push(i); // 배열에 값 추가하여 원본 변경\n    // }\n    \n    const getPaginationGroup = () => {\n        return new Array(postsPerPage).fill().map((_,idx) => first +idx );\n    }\n\n    const handlePrevPageGroup = () => {\n        setFirst(first -5);\n    }\n    \n    console.log('currentPage',currentPage); \n\n    return (\n        <div>\n        <nav>\n            <ul className=\"pagination\">\n                <li onClick={handlePrevPageGroup}>{'<<'}</li>\n                <li onClick={prevPage} className={currentPage === 1 ? \"disabled\" : \"abled\"}> {'<'} </li>\n                {getPaginationGroup().map((number,index) => (\n                    <li key={number} onClick={()=> paginate(number)} \n                    className={currentPage === number ? \"page-item-active\" : \"page-item\"}>\n                    <span className=\"page-link\">\n                        {number}\n                    </span>\n                </li>\n                ))}\n                {/* {pageNumbers.map((number) => ( \n                    <li key={number} onClick={()=> paginate(number)} \n                        className={currentPage === number ? \"page-item-active\" : \"page-item\"}>\n                        <span className=\"page-link\">\n                            {number}\n                        </span>\n                    </li>\n                ))} */}\n                <li onClick={nextPage} className={currentPage === totalPage ? \"disabled\" : \"abled\"}> {'>'} </li>    \n                <li>{'>>'}</li>    \n            </ul>\n        </nav>\n        </div>\n    );\n};\n\nexport default Pagination;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAQ,OAAO;AACtC,OAAO,kBAAkB;AAAA;AAEzB,MAAMC,UAAU,GAAG,QAAgE;EAAA;EAAA,IAA/D;IAAEC,YAAY;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAS,CAAC;EAC1E;EACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,IAAI,CAACC,WAAW,GAACR,YAAY,CAAC;EACrD,MAAM,CAACS,IAAI,EAACC,OAAO,CAAC,GAAGZ,QAAQ,CAACO,SAAS,GAAGL,YAAY,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACW,KAAK,EAACC,QAAQ,CAAC,GAAGd,QAAQ,CAACW,IAAI,IAAIT,YAAY,GAAG,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACQ,WAAW,EAAEK,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMgB,SAAS,GAAGR,IAAI,CAACC,IAAI,CAACN,UAAU,GAAGD,YAAY,CAAC,CAAC,CAAC;EACxDe,OAAO,CAACC,GAAG,CAAC,OAAO,EAACF,SAAS,CAAC;;EAG9B;EACA;EACA;;EAEA,MAAMG,kBAAkB,GAAG,MAAM;IAC7B,OAAO,IAAIC,KAAK,CAAClB,YAAY,CAAC,CAACmB,IAAI,EAAE,CAACC,GAAG,CAAC,CAACC,CAAC,EAACC,GAAG,KAAKX,KAAK,GAAEW,GAAG,CAAE;EACrE,CAAC;EAED,MAAMC,mBAAmB,GAAG,MAAM;IAC9BX,QAAQ,CAACD,KAAK,GAAE,CAAC,CAAC;EACtB,CAAC;EAEDI,OAAO,CAACC,GAAG,CAAC,aAAa,EAACR,WAAW,CAAC;EAEtC,oBACI;IAAA,uBACA;MAAA,uBACI;QAAI,SAAS,EAAC,YAAY;QAAA,wBACtB;UAAI,OAAO,EAAEe,mBAAoB;UAAA,UAAE;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eAC7C;UAAI,OAAO,EAAEpB,QAAS;UAAC,SAAS,EAAEK,WAAW,KAAK,CAAC,GAAG,UAAU,GAAG,OAAQ;UAAA,gBAAG,GAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO,EACvFS,kBAAkB,EAAE,CAACG,GAAG,CAAC,CAACI,MAAM,EAACC,KAAK,kBACnC;UAAiB,OAAO,EAAE,MAAKvB,QAAQ,CAACsB,MAAM,CAAE;UAChD,SAAS,EAAEhB,WAAW,KAAKgB,MAAM,GAAG,kBAAkB,GAAG,WAAY;UAAA,uBACrE;YAAM,SAAS,EAAC,WAAW;YAAA,UACtBA;UAAM;YAAA;YAAA;YAAA;UAAA;QACJ,GAJEA,MAAM;UAAA;UAAA;UAAA;QAAA,QAMlB,CAAC,eASF;UAAI,OAAO,EAAEpB,QAAS;UAAC,SAAS,EAAEI,WAAW,KAAKM,SAAS,GAAG,UAAU,GAAG,OAAQ;UAAA,gBAAG,GAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO,eAChG;UAAA,UAAK;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA;IACd;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAC,GArDIf,UAAU;AAAA,KAAVA,UAAU;AAuDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}